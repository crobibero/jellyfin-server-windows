name: 'Publish'

on:
  release:
    types:
      - "released"
      - "prereleased"
  workflow_dispatch:
    inputs:
      jellyfin_version:
        required: true
        type: string
        description: "The Jellyfin version (eg: 10.8.0, 10.8.0-beta1)"
      release_type:
        required: true
        type: choice
        description: "stable/stable-pre"
        options:
          - "stable"
          - "stable-pre"
          - "unstable"

jobs:
  publish:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Release Variables
        if: ${{ github.event_name == 'release' }}
        run: |
          if ( '${{ github.event.release.prerelease }}' == 'true' ) {
            echo "release_type=stable-pre" | Add-Content -Path $ENV:GITHUB_ENV
          } else {
            echo "release_type=stable" | Add-Content -Path $ENV:GITHUB_ENV
          }
          echo "jellyfin_version=${{ github.event.release.tag_name }}" | Add-Content -Path $ENV:GITHUB_ENV
          echo ${{ env.release_type }}

      - name: Get Dispatch Variables
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "jellyfin_version=${{ github.event.inputs.jellyfin_version }}" | Add-Content -Path $ENV:GITHUB_ENV
          echo "release_type=${{ github.event.inputs.release_type }}" | Add-Content -Path $ENV:GITHUB_ENV

      - name: Install NSIS
        run: |
          Invoke-WebRequest 'https://get.scoop.sh' -OutFile 'scoop-install.ps1'
          .\scoop-install.ps1 -RunAsAdmin
          scoop bucket add extras
          scoop install nsis

      - name: Clone UX Repository
        uses: actions/checkout@v3
        with:
          repository: jellyfin/jellyfin-ux
          path: .\jellyfin-ux

      - name: Setup Jellyfin server
        run: |
          Invoke-WebRequest 'https://repo.jellyfin.org/releases/server/windows/${{ env.release_type }}/${{ env.jellyfin_version }}/combined/jellyfin_${{ env.jellyfin_version }}.zip' -OutFile 'jellyfin.zip'
          Expand-Archive 'jellyfin.zip'
          Copy-Item ".\Support Files\LICENSE" -Destination $(Resolve-Path .\jellyfin\jellyfin_*)

      - name: Publish Tray
        run: dotnet publish -c Release -r win-x64 --no-self-contained --output $(Resolve-Path .\jellyfin\jellyfin_*)

      - name: Build installer
        run: |
          $env:InstallLocation = $(Resolve-Path .\jellyfin\jellyfin_*)
          makensis /Dx64 /DUXPATH=$(Resolve-Path .\jellyfin-ux) $(Join-Path -Path $(Resolve-Path .\nsis) -ChildPath jellyfin.nsi)

      - name: Rename Installer
        run: |
          cd .\nsis
          Rename-Item -Path .\jellyfin_*_windows-x64.exe -NewName ("jellyfin_${{ env.jellyfin_version }}_windows-x64.exe")

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-x64
          retention-days: 30
          if-no-files-found: error
          path: .\nsis\jellyfin_*_windows-x64.exe
